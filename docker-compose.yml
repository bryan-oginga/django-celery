version: '3.8'

services:
  web:
    build: .
    container_name: django_app
    ports:
      - "8000:8000"
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    env_file:  
      - .ENV

  db:
    image: postgres:13
    container_name: postgres_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6
    container_name: redis_cache
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  celery:
    build: .
    container_name: celery_worker
    user: nobody
    command: celery -A sendify worker --loglevel=info
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    env_file:
      - .ENV

  flower:
    build: .
    container_name: flower_dashboard
    command: celery -A sendify flower
    ports:
      - "5555:5555"
    depends_on:
      celery:
        condition: service_started
    env_file:
      - .ENV
